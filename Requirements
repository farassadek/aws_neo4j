
What I want to accomplish?
    Graph representation of my AWS EC2 environment to visually trace the connection among EC2s instance and the out side world. 

How ? 
    Use neo4j as a GUI inerface to trace and draw th security group of the instances.

Why? 
    A security group acts as a virtual firewall that controls the traffic for one or more instances. Those security groups are basically a list of
    text rule that can be accessed from the AWS console or the APIs. Tracing the security group(s) for an instance might be easy to trace, but what
    about a large group of instances each of which associated with a dosen of security group each with a large group of rules? 
    The best way is the graphical UI that provide a visual relationship of the instances amonge them and among the outside worlds.  

Who can use this? 
   Any AWS crdential holder can use this method to visually check the connection and security of the EC2 instances connection.



1) AWS Environment
2) GateWay machine in AWS
3) Neo4j Package
4) Python 
5) Apache server



----------------- python and modules ----------


yum install python34
curl https://bootstrap.pypa.io/get-pip.py | python3.4
pip install ipython
Pip install neo4j-driver
pip install boto3

.............

python --version
Python 2.7.10

pip install ipython
pip install neo4jrestclient
pip install boto
-----------------------------------------------



----------------- GW with Admin Role ----------

Create a role with admin policy from AWS IAM.
Create an instance with the admin role.
Open port 22 and 80 to admin tunnel only.

-----------------------------------------------



-------------------- Apache Config ------------

neo4j works on port 7474, proxy the port to port 80 of apache http.

yum install httpd
chkconfig --add httpd
chkconfig httpd on 


cat  /etc/httpd/conf.d/neo4j.conf 
<VirtualHost *:*>
    ProxyPreserveHost On
    ProxyPass / http://0.0.0.0:7474/
    ProxyPassReverse / http://0.0.0.0:7474/
    ServerName localhost
</VirtualHost>

-----------------------------------------------


-------------------- neo4j Config ------------

echo "
dbms.directories.import=import

dbms.connector.bolt.type=BOLT
dbms.connector.bolt.enabled=true
dbms.connector.bolt.tls_level=OPTIONAL
dbms.connector.bolt.address=0.0.0.0:7687

dbms.connector.http.type=HTTP
dbms.connector.http.enabled=true
dbms.connector.http.address=0.0.0.0:7474

dbms.connector.https.type=HTTP
dbms.connector.https.enabled=true
dbms.connector.https.encryption=TLS
dbms.connector.https.address=0.0.0.0:7473

" > /opt/neo4j/conf/neo4j.conf













cat /etc/init.d/neo4j
#!/bin/bash
# chkconfig: 2345 20 80
# description: Description comes here....

# Source function library.
. /etc/init.d/functions

start() {
    rm -fr /opt/neo4j/data/graph.db/*
    /opt/neo4j/bin/neo4j start 
    /opt/build_aws_new4jGraph.py
    service httpd restart
}

stop() {
    /opt/neo4j/bin/neo4j stop
}

status() {
    /opt/neo4j/bin/neo4j status
}

case "$1" in 
    start)
       start
       ;;
    stop)
       stop
       ;;
    restart)
       stop
       start
       ;;
    status)
       status
       ;;
    *)
       echo "Usage: $0 {start|stop|status|restart}"
esac

exit 0 
........

chkconfig --add neo4j
chkconfig neo4j on 



--------------------------------


